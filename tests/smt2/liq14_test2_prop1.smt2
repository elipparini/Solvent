
; benchmark generated from python API
(set-info :status unknown)
(declare-datatypes ((Proc 0)) (((pay) (unlock))))
 (declare-fun w_0 () Int)
(declare-fun b_1 () Bool)
(declare-fun t_b_0_0 () Bool)
(declare-fun aw_0_1 () Int)
(declare-fun aw_1_1 () Int)
(declare-fun aw_0_0 () Int)
(declare-fun aw_1_0 () Int)
(declare-fun w_1 () Int)
(declare-fun b_0 () Bool)
(declare-fun xn_0 () Int)
(declare-fun xa_0 () Int)
(declare-fun b_2 () Bool)
(declare-fun t_b_1_0 () Bool)
(declare-fun t_aw_1_0_1 () Int)
(declare-fun aw_2_1 () Int)
(declare-fun t_aw_1_0_0 () Int)
(declare-fun aw_2_0 () Int)
(declare-fun t_w_1_0 () Int)
(declare-fun w_2 () Int)
(declare-fun pay_amount_1 () Int)
(declare-fun xa_1 () Int)
(declare-fun xn_1 () Int)
(declare-fun f_1 () Proc)
(declare-fun block_num_1 () Int)
(declare-fun block_num_2 () Int)
(declare-fun b_3 () Bool)
(declare-fun t_b_2_0 () Bool)
(declare-fun t_aw_2_0_1 () Int)
(declare-fun aw_3_1 () Int)
(declare-fun t_aw_2_0_0 () Int)
(declare-fun aw_3_0 () Int)
(declare-fun t_w_2_0 () Int)
(declare-fun w_3 () Int)
(declare-fun pay_amount_2 () Int)
(declare-fun xa_2 () Int)
(declare-fun xn_2 () Int)
(declare-fun f_2 () Proc)
(declare-fun block_num_3 () Int)
(declare-fun b_4 () Bool)
(declare-fun t_b_3_0 () Bool)
(declare-fun t_aw_3_0_1 () Int)
(declare-fun aw_4_1 () Int)
(declare-fun t_aw_3_0_0 () Int)
(declare-fun aw_4_0 () Int)
(declare-fun t_w_3_0 () Int)
(declare-fun w_4 () Int)
(declare-fun pay_amount_3 () Int)
(declare-fun xa_3 () Int)
(declare-fun xn_3 () Int)
(declare-fun f_3 () Proc)
(declare-fun block_num_4 () Int)
(declare-fun b_5 () Bool)
(declare-fun t_b_4_0 () Bool)
(declare-fun t_aw_4_0_1 () Int)
(declare-fun aw_5_1 () Int)
(declare-fun t_aw_4_0_0 () Int)
(declare-fun aw_5_0 () Int)
(declare-fun t_w_4_0 () Int)
(declare-fun w_5 () Int)
(declare-fun pay_amount_4 () Int)
(declare-fun xa_4 () Int)
(declare-fun xn_4 () Int)
(declare-fun f_4 () Proc)
(declare-fun block_num_5 () Int)
(assert
 (>= w_0 0))
(assert
 (let (($x147 (= t_b_0_0 b_1)))
 (let (($x142 (= aw_1_1 aw_0_1)))
 (let (($x141 (= aw_1_0 aw_0_0)))
 (let (($x143 (and $x141 $x142)))
 (let (($x140 (= w_1 w_0)))
 (let (($x148 (and $x140 $x143 $x147)))
 (let (($x138 (= xn_0 0)))
 (let (($x139 (not $x138)))
 (let (($x151 (ite $x139 (and $x140 $x143 (= b_0 b_1)) (and (and (= t_b_0_0 false) $x148) $x148))))
 (and (and (>= xa_0 0) (<= xa_0 1) (>= xn_0 0)) (and (>= aw_0_0 0) (>= aw_0_1 0)) $x151)))))))))))
(assert
 (let (($x178 (= t_b_1_0 b_2)))
 (let (($x205 (= w_2 t_w_1_0)))
 (let (($x209 (and $x205 (and (= aw_2_0 t_aw_1_0_0) (= aw_2_1 t_aw_1_0_1)) $x178)))
 (let (($x201 (= t_aw_1_0_1 aw_1_1)))
 (let (($x198 (= xa_1 1)))
 (let (($x196 (= t_aw_1_0_0 aw_1_0)))
 (let (($x193 (= xa_1 0)))
 (let (($x203 (and (ite $x193 (= t_aw_1_0_0 (+ aw_1_0 pay_amount_1)) $x196) (ite $x198 (= t_aw_1_0_1 (+ aw_1_1 pay_amount_1)) $x201))))
 (let (($x173 (= b_1 b_2)))
 (let (($x171 (= aw_2_1 aw_1_1)))
 (let (($x170 (= aw_2_0 aw_1_0)))
 (let (($x172 (and $x170 $x171)))
 (let (($x169 (= w_2 w_1)))
 (let (($x174 (and $x169 $x172 $x173)))
 (let (($x211 (ite (not (>= pay_amount_1 0)) $x174 (and (and (= t_w_1_0 (- w_1 pay_amount_1)) $x203) $x209))))
 (let (($x215 (ite (not (and (<= pay_amount_1 w_1) b_1)) $x174 (and (and (and (= t_b_1_0 false) $x211) $x209)))))
 (let (($x167 (= xn_1 0)))
 (let (($x168 (not $x167)))
 (let (($x175 (not b_1)))
 (let (($x176 (not $x175)))
 (let (($x183 (and (ite $x176 $x174 (and (and (= t_b_1_0 true) (and $x169 $x172 $x178)))))))
 (let (($x166 (= f_1 unlock)))
 (let (($x163 (>= aw_1_1 0)))
 (let (($x162 (>= aw_1_0 0)))
 (let (($x164 (and $x162 $x163)))
 (and (and (>= xa_1 0) (<= xa_1 1) (>= xn_1 0)) $x164 (>= block_num_2 block_num_1) (ite $x166 (ite $x168 $x174 $x183) (ite $x168 $x174 (and $x215))))))))))))))))))))))))))))))
(assert
 (let (($x270 (= t_b_2_0 b_3)))
 (let (($x297 (= w_3 t_w_2_0)))
 (let (($x301 (and $x297 (and (= aw_3_0 t_aw_2_0_0) (= aw_3_1 t_aw_2_0_1)) $x270)))
 (let (($x293 (= t_aw_2_0_1 aw_2_1)))
 (let (($x290 (= xa_2 1)))
 (let (($x288 (= t_aw_2_0_0 aw_2_0)))
 (let (($x285 (= xa_2 0)))
 (let (($x295 (and (ite $x285 (= t_aw_2_0_0 (+ aw_2_0 pay_amount_2)) $x288) (ite $x290 (= t_aw_2_0_1 (+ aw_2_1 pay_amount_2)) $x293))))
 (let (($x265 (= b_2 b_3)))
 (let (($x263 (= aw_3_1 aw_2_1)))
 (let (($x262 (= aw_3_0 aw_2_0)))
 (let (($x264 (and $x262 $x263)))
 (let (($x261 (= w_3 w_2)))
 (let (($x266 (and $x261 $x264 $x265)))
 (let (($x303 (ite (not (>= pay_amount_2 0)) $x266 (and (and (= t_w_2_0 (- w_2 pay_amount_2)) $x295) $x301))))
 (let (($x307 (ite (not (and (<= pay_amount_2 w_2) b_2)) $x266 (and (and (and (= t_b_2_0 false) $x303) $x301)))))
 (let (($x259 (= xn_2 0)))
 (let (($x260 (not $x259)))
 (let (($x267 (not b_2)))
 (let (($x268 (not $x267)))
 (let (($x275 (and (ite $x268 $x266 (and (and (= t_b_2_0 true) (and $x261 $x264 $x270)))))))
 (let (($x258 (= f_2 unlock)))
 (let (($x255 (>= aw_2_1 0)))
 (let (($x254 (>= aw_2_0 0)))
 (let (($x256 (and $x254 $x255)))
 (and (and (>= xa_2 0) (<= xa_2 1) (>= xn_2 0)) $x256 (>= block_num_3 block_num_2) (ite $x258 (ite $x260 $x266 $x275) (ite $x260 $x266 (and $x307))))))))))))))))))))))))))))))
(assert
 (let (($x361 (= t_b_3_0 b_4)))
 (let (($x388 (= w_4 t_w_3_0)))
 (let (($x392 (and $x388 (and (= aw_4_0 t_aw_3_0_0) (= aw_4_1 t_aw_3_0_1)) $x361)))
 (let (($x384 (= t_aw_3_0_1 aw_3_1)))
 (let (($x381 (= xa_3 1)))
 (let (($x379 (= t_aw_3_0_0 aw_3_0)))
 (let (($x376 (= xa_3 0)))
 (let (($x386 (and (ite $x376 (= t_aw_3_0_0 (+ aw_3_0 pay_amount_3)) $x379) (ite $x381 (= t_aw_3_0_1 (+ aw_3_1 pay_amount_3)) $x384))))
 (let (($x356 (= b_3 b_4)))
 (let (($x354 (= aw_4_1 aw_3_1)))
 (let (($x353 (= aw_4_0 aw_3_0)))
 (let (($x355 (and $x353 $x354)))
 (let (($x352 (= w_4 w_3)))
 (let (($x357 (and $x352 $x355 $x356)))
 (let (($x394 (ite (not (>= pay_amount_3 0)) $x357 (and (and (= t_w_3_0 (- w_3 pay_amount_3)) $x386) $x392))))
 (let (($x398 (ite (not (and (<= pay_amount_3 w_3) b_3)) $x357 (and (and (and (= t_b_3_0 false) $x394) $x392)))))
 (let (($x350 (= xn_3 0)))
 (let (($x351 (not $x350)))
 (let (($x358 (not b_3)))
 (let (($x359 (not $x358)))
 (let (($x366 (and (ite $x359 $x357 (and (and (= t_b_3_0 true) (and $x352 $x355 $x361)))))))
 (let (($x349 (= f_3 unlock)))
 (let (($x346 (>= aw_3_1 0)))
 (let (($x345 (>= aw_3_0 0)))
 (let (($x347 (and $x345 $x346)))
 (and (and (>= xa_3 0) (<= xa_3 1) (>= xn_3 0)) $x347 (>= block_num_4 block_num_3) (ite $x349 (ite $x351 $x357 $x366) (ite $x351 $x357 (and $x398))))))))))))))))))))))))))))))
(assert
 (let (($x452 (= t_b_4_0 b_5)))
 (let (($x479 (= w_5 t_w_4_0)))
 (let (($x483 (and $x479 (and (= aw_5_0 t_aw_4_0_0) (= aw_5_1 t_aw_4_0_1)) $x452)))
 (let (($x475 (= t_aw_4_0_1 aw_4_1)))
 (let (($x472 (= xa_4 1)))
 (let (($x470 (= t_aw_4_0_0 aw_4_0)))
 (let (($x467 (= xa_4 0)))
 (let (($x477 (and (ite $x467 (= t_aw_4_0_0 (+ aw_4_0 pay_amount_4)) $x470) (ite $x472 (= t_aw_4_0_1 (+ aw_4_1 pay_amount_4)) $x475))))
 (let (($x447 (= b_4 b_5)))
 (let (($x445 (= aw_5_1 aw_4_1)))
 (let (($x444 (= aw_5_0 aw_4_0)))
 (let (($x446 (and $x444 $x445)))
 (let (($x443 (= w_5 w_4)))
 (let (($x448 (and $x443 $x446 $x447)))
 (let (($x485 (ite (not (>= pay_amount_4 0)) $x448 (and (and (= t_w_4_0 (- w_4 pay_amount_4)) $x477) $x483))))
 (let (($x489 (ite (not (and (<= pay_amount_4 w_4) b_4)) $x448 (and (and (and (= t_b_4_0 false) $x485) $x483)))))
 (let (($x441 (= xn_4 0)))
 (let (($x442 (not $x441)))
 (let (($x449 (not b_4)))
 (let (($x450 (not $x449)))
 (let (($x457 (and (ite $x450 $x448 (and (and (= t_b_4_0 true) (and $x443 $x446 $x452)))))))
 (let (($x440 (= f_4 unlock)))
 (let (($x437 (>= aw_4_1 0)))
 (let (($x436 (>= aw_4_0 0)))
 (let (($x438 (and $x436 $x437)))
 (and (and (>= xa_4 0) (<= xa_4 1) (>= xn_4 0)) $x438 (>= block_num_5 block_num_4) (ite $x440 (ite $x442 $x448 $x457) (ite $x442 $x448 (and $x489))))))))))))))))))))))))))))))
(assert
 (let (($x590 (exists ((xa_q Int) )(let (($x586 (forall ((xn_q0 Int) (f_q0 Proc) (wq0 Int) (awq0_0 Int) (awq0_1 Int) (t_wq0_0 Int) (t_awq0_0_0 Int) (t_awq0_0_1 Int) (block_num_q0 Int) (pay_amount0_q Int) (bq0 Bool) (t_bq0_0 Bool) (xn_q1 Int) (f_q1 Proc) (wq1 Int) (awq1_0 Int) (awq1_1 Int) (t_wq1_0 Int) (t_awq1_0_0 Int) (t_awq1_0_1 Int) (block_num_q1 Int) (pay_amount1_q Int) (bq1 Bool) (t_bq1_0 Bool) )(let (($x631 (and (or (and (distinct xa_q 0) true) (not (= awq1_0 (+ aw_1_0 w_1)))) (or (and (distinct xa_q 1) true) (not (= awq1_1 (+ aw_1_1 w_1)))))))
 (let (($x613 (= t_bq1_0 bq1)))
 (let (($x617 (= wq1 t_wq1_0)))
 (let (($x618 (and $x617 (and (= awq1_0 t_awq1_0_0) (= awq1_1 t_awq1_0_1)) $x613)))
 (let (($x648 (and (ite (= xa_q 0) (= t_awq1_0_0 (+ awq0_0 pay_amount1_q)) (= t_awq1_0_0 awq0_0)) (ite (= xa_q 1) (= t_awq1_0_1 (+ awq0_1 pay_amount1_q)) (= t_awq1_0_1 awq0_1)))))
 (let (($x770 (= bq0 bq1)))
 (let (($x771 (= awq1_1 awq0_1)))
 (let (($x772 (= awq1_0 awq0_0)))
 (let (($x773 (and $x772 $x771)))
 (let (($x774 (= wq1 wq0)))
 (let (($x775 (and $x774 $x773 $x770)))
 (let (($x638 (>= pay_amount1_q 0)))
 (let (($x639 (not $x638)))
 (let (($x641 (= t_bq1_0 false)))
 (let (($x665 (and $x641 (ite $x639 $x775 (and (and (= t_wq1_0 (- wq0 pay_amount1_q)) $x648) $x618)))))
 (let (($x587 (and (ite (not (and (<= pay_amount1_q wq0) bq0)) $x775 (and (and $x665 $x618))))))
 (let (($x650 (= xn_q1 0)))
 (let (($x651 (not $x650)))
 (let (($x791 (ite (not (not bq0)) $x775 (and (and (= t_bq1_0 true) (and $x774 $x773 $x613))))))
 (let (($x660 (= f_q1 unlock)))
 (let (($x563 (and (and (>= xa_q 0) (<= xa_q 1) (>= xn_q1 0)) (and (>= awq0_0 0) (>= awq0_1 0)) (>= block_num_q1 block_num_q0) (ite $x660 (ite $x651 $x775 (and $x791)) (ite $x651 $x775 $x587)))))
 (let (($x564 (not $x563)))
 (let (($x802 (= t_bq0_0 bq0)))
 (let (($x806 (= wq0 t_wq0_0)))
 (let (($x807 (and $x806 (and (= awq0_0 t_awq0_0_0) (= awq0_1 t_awq0_0_1)) $x802)))
 (let (($x568 (and (ite (= xa_q 0) (= t_awq0_0_0 (+ aw_1_0 pay_amount0_q)) (= t_awq0_0_0 aw_1_0)) (ite (= xa_q 1) (= t_awq0_0_1 (+ aw_1_1 pay_amount0_q)) (= t_awq0_0_1 aw_1_1)))))
 (let (($x821 (= b_1 bq0)))
 (let (($x822 (= awq0_1 aw_1_1)))
 (let (($x823 (= awq0_0 aw_1_0)))
 (let (($x824 (and $x823 $x822)))
 (let (($x825 (= wq0 w_1)))
 (let (($x826 (and $x825 $x824 $x821)))
 (let (($x827 (>= pay_amount0_q 0)))
 (let (($x828 (not $x827)))
 (let (($x830 (= t_bq0_0 false)))
 (let (($x573 (and $x830 (ite $x828 $x826 (and (and (= t_wq0_0 (- w_1 pay_amount0_q)) $x568) $x807)))))
 (let (($x577 (and (ite (not (and (<= pay_amount0_q w_1) b_1)) $x826 (and (and $x573 $x807))))))
 (let (($x839 (= xn_q0 0)))
 (let (($x840 (not $x839)))
 (let (($x175 (not b_1)))
 (let (($x176 (not $x175)))
 (let (($x847 (and (ite $x176 $x826 (and (and (= t_bq0_0 true) (and $x825 $x824 $x802)))))))
 (let (($x849 (= f_q0 unlock)))
 (let (($x163 (>= aw_1_1 0)))
 (let (($x162 (>= aw_1_0 0)))
 (let (($x164 (and $x162 $x163)))
 (let (($x852 (>= xn_q0 0)))
 (let (($x667 (<= xa_q 1)))
 (let (($x668 (>= xa_q 0)))
 (let (($x580 (and $x668 $x667 $x852)))
 (let (($x581 (and $x580 $x164 (>= block_num_q0 block_num_1) (ite $x849 (ite $x840 $x826 $x847) (ite $x840 $x826 $x577)))))
 (or (not $x581) $x564 $x631)))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x557 (<= xa_q 1)))
 (let (($x558 (>= xa_q 0)))
 (let (($x560 (and $x558 $x557)))
 (and $x560 true $x586))))))
 ))
 (and $x590)))
(check-sat)
(get-info :reason-unknown)
