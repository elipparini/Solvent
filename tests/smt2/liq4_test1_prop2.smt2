; benchmark generated from python API
(set-info :status unknown)
(set-logic LIA)
(declare-datatypes ((Proc 0)) (((pay))))
 (declare-fun w_0 () Int)
(declare-fun aw_0_1 () Int)
(declare-fun aw_1_1 () Int)
(declare-fun aw_0_0 () Int)
(declare-fun aw_1_0 () Int)
(declare-fun w_1 () Int)
(declare-fun xn_0 () Int)
(declare-fun xa_0 () Int)
(declare-fun t_aw_1_0_1 () Int)
(declare-fun aw_2_1 () Int)
(declare-fun t_aw_1_0_0 () Int)
(declare-fun aw_2_0 () Int)
(declare-fun t_w_1_0 () Int)
(declare-fun w_2 () Int)
(declare-fun pay_amount_1 () Int)
(declare-fun xa_1 () Int)
(declare-fun xn_1 () Int)
(declare-fun block_num_1 () Int)
(declare-fun block_num_2 () Int)
(declare-fun t_aw_2_0_1 () Int)
(declare-fun aw_3_1 () Int)
(declare-fun t_aw_2_0_0 () Int)
(declare-fun aw_3_0 () Int)
(declare-fun t_w_2_0 () Int)
(declare-fun w_3 () Int)
(declare-fun pay_amount_2 () Int)
(declare-fun xa_2 () Int)
(declare-fun xn_2 () Int)
(declare-fun block_num_3 () Int)
(declare-fun t_aw_3_0_1 () Int)
(declare-fun aw_4_1 () Int)
(declare-fun t_aw_3_0_0 () Int)
(declare-fun aw_4_0 () Int)
(declare-fun t_w_3_0 () Int)
(declare-fun w_4 () Int)
(declare-fun pay_amount_3 () Int)
(declare-fun xa_3 () Int)
(declare-fun xn_3 () Int)
(declare-fun block_num_4 () Int)
(declare-fun t_aw_4_0_1 () Int)
(declare-fun aw_5_1 () Int)
(declare-fun t_aw_4_0_0 () Int)
(declare-fun aw_5_0 () Int)
(declare-fun t_w_4_0 () Int)
(declare-fun w_5 () Int)
(declare-fun pay_amount_4 () Int)
(declare-fun xa_4 () Int)
(declare-fun xn_4 () Int)
(declare-fun block_num_5 () Int)
(assert
 (>= w_0 0))
(assert
 (let (($x113 (= w_1 w_0)))
 (let (($x117 (and $x113 (and (= aw_1_0 aw_0_0) (= aw_1_1 aw_0_1)))))
 (and (and (>= xa_0 0) (<= xa_0 1) (>= xn_0 0)) (and (>= aw_0_0 0) (>= aw_0_1 0)) (ite (not (= xn_0 0)) $x117 (and $x117 $x117))))))
(assert
 (let (($x157 (= w_2 t_w_1_0)))
 (let (($x153 (= t_aw_1_0_1 aw_1_1)))
 (let (($x150 (= xa_1 1)))
 (let (($x148 (= t_aw_1_0_0 aw_1_0)))
 (let (($x145 (= xa_1 0)))
 (let (($x155 (and (ite $x145 (= t_aw_1_0_0 (+ aw_1_0 pay_amount_1)) $x148) (ite $x150 (= t_aw_1_0_1 (+ aw_1_1 pay_amount_1)) $x153))))
 (let (($x162 (and (and (= t_w_1_0 (- w_1 pay_amount_1)) $x155) (and $x157 (and (= aw_2_0 t_aw_1_0_0) (= aw_2_1 t_aw_1_0_1))))))
 (let (($x133 (= w_2 w_1)))
 (let (($x137 (and $x133 (and (= aw_2_0 aw_1_0) (= aw_2_1 aw_1_1)))))
 (let (($x166 (ite (not (<= pay_amount_1 (- w_1 1))) $x137 (and (and (ite (not (>= pay_amount_1 0)) $x137 $x162))))))
 (let (($x128 (>= aw_1_1 0)))
 (let (($x127 (>= aw_1_0 0)))
 (let (($x129 (and $x127 $x128)))
 (and (and (>= xa_1 0) (<= xa_1 1) (>= xn_1 0)) $x129 (>= block_num_2 block_num_1) (ite (not (= xn_1 0)) $x137 (and $x166)))))))))))))))))
(assert
 (let (($x231 (= w_3 t_w_2_0)))
 (let (($x227 (= t_aw_2_0_1 aw_2_1)))
 (let (($x224 (= xa_2 1)))
 (let (($x222 (= t_aw_2_0_0 aw_2_0)))
 (let (($x219 (= xa_2 0)))
 (let (($x229 (and (ite $x219 (= t_aw_2_0_0 (+ aw_2_0 pay_amount_2)) $x222) (ite $x224 (= t_aw_2_0_1 (+ aw_2_1 pay_amount_2)) $x227))))
 (let (($x236 (and (and (= t_w_2_0 (- w_2 pay_amount_2)) $x229) (and $x231 (and (= aw_3_0 t_aw_2_0_0) (= aw_3_1 t_aw_2_0_1))))))
 (let (($x207 (= w_3 w_2)))
 (let (($x211 (and $x207 (and (= aw_3_0 aw_2_0) (= aw_3_1 aw_2_1)))))
 (let (($x240 (ite (not (<= pay_amount_2 (- w_2 1))) $x211 (and (and (ite (not (>= pay_amount_2 0)) $x211 $x236))))))
 (let (($x202 (>= aw_2_1 0)))
 (let (($x201 (>= aw_2_0 0)))
 (let (($x203 (and $x201 $x202)))
 (and (and (>= xa_2 0) (<= xa_2 1) (>= xn_2 0)) $x203 (>= block_num_3 block_num_2) (ite (not (= xn_2 0)) $x211 (and $x240)))))))))))))))))
(assert
 (let (($x303 (= w_4 t_w_3_0)))
 (let (($x299 (= t_aw_3_0_1 aw_3_1)))
 (let (($x296 (= xa_3 1)))
 (let (($x294 (= t_aw_3_0_0 aw_3_0)))
 (let (($x291 (= xa_3 0)))
 (let (($x301 (and (ite $x291 (= t_aw_3_0_0 (+ aw_3_0 pay_amount_3)) $x294) (ite $x296 (= t_aw_3_0_1 (+ aw_3_1 pay_amount_3)) $x299))))
 (let (($x308 (and (and (= t_w_3_0 (- w_3 pay_amount_3)) $x301) (and $x303 (and (= aw_4_0 t_aw_3_0_0) (= aw_4_1 t_aw_3_0_1))))))
 (let (($x279 (= w_4 w_3)))
 (let (($x283 (and $x279 (and (= aw_4_0 aw_3_0) (= aw_4_1 aw_3_1)))))
 (let (($x312 (ite (not (<= pay_amount_3 (- w_3 1))) $x283 (and (and (ite (not (>= pay_amount_3 0)) $x283 $x308))))))
 (let (($x274 (>= aw_3_1 0)))
 (let (($x273 (>= aw_3_0 0)))
 (let (($x275 (and $x273 $x274)))
 (and (and (>= xa_3 0) (<= xa_3 1) (>= xn_3 0)) $x275 (>= block_num_4 block_num_3) (ite (not (= xn_3 0)) $x283 (and $x312)))))))))))))))))
(assert
 (let (($x375 (= w_5 t_w_4_0)))
 (let (($x371 (= t_aw_4_0_1 aw_4_1)))
 (let (($x368 (= xa_4 1)))
 (let (($x366 (= t_aw_4_0_0 aw_4_0)))
 (let (($x363 (= xa_4 0)))
 (let (($x373 (and (ite $x363 (= t_aw_4_0_0 (+ aw_4_0 pay_amount_4)) $x366) (ite $x368 (= t_aw_4_0_1 (+ aw_4_1 pay_amount_4)) $x371))))
 (let (($x380 (and (and (= t_w_4_0 (- w_4 pay_amount_4)) $x373) (and $x375 (and (= aw_5_0 t_aw_4_0_0) (= aw_5_1 t_aw_4_0_1))))))
 (let (($x351 (= w_5 w_4)))
 (let (($x355 (and $x351 (and (= aw_5_0 aw_4_0) (= aw_5_1 aw_4_1)))))
 (let (($x384 (ite (not (<= pay_amount_4 (- w_4 1))) $x355 (and (and (ite (not (>= pay_amount_4 0)) $x355 $x380))))))
 (let (($x346 (>= aw_4_1 0)))
 (let (($x345 (>= aw_4_0 0)))
 (let (($x347 (and $x345 $x346)))
 (and (and (>= xa_4 0) (<= xa_4 1) (>= xn_4 0)) $x347 (>= block_num_5 block_num_4) (ite (not (= xn_4 0)) $x355 (and $x384)))))))))))))))))
(assert
 (let (($x449 (exists ((xa_q Int) )(let (($x445 (forall ((xn_q0 Int) (f_q0 Proc) (wq0 Int) (awq0_0 Int) (awq0_1 Int) (t_wq0_0 Int) (t_awq0_0_0 Int) (t_awq0_0_1 Int) (block_num_q0 Int) (pay_amount0_q Int) )(let (($x419 (and (distinct xa_q 1) true)))
 (let (($x421 (and (distinct xa_q 0) true)))
 (let (($x428 (and (or $x421 (not (= awq0_0 (- (+ aw_1_0 w_1) 1)))) (or $x419 (not (= awq0_1 (- (+ aw_1_1 w_1) 1)))))))
 (let (($x493 (= wq0 t_wq0_0)))
 (let (($x494 (and $x493 (and (= awq0_0 t_awq0_0_0) (= awq0_1 t_awq0_0_1)))))
 (let (($x424 (and (ite (= xa_q 0) (= t_awq0_0_0 (+ aw_1_0 pay_amount0_q)) (= t_awq0_0_0 aw_1_0)) (ite (= xa_q 1) (= t_awq0_0_1 (+ aw_1_1 pay_amount0_q)) (= t_awq0_0_1 aw_1_1)))))
 (let (($x511 (= wq0 w_1)))
 (let (($x512 (and $x511 (and (= awq0_0 aw_1_0) (= awq0_1 aw_1_1)))))
 (let (($x513 (>= pay_amount0_q 0)))
 (let (($x514 (not $x513)))
 (let (($x434 (and (and (ite $x514 $x512 (and (and (= t_wq0_0 (- w_1 pay_amount0_q)) $x424) $x494))))))
 (let (($x522 (= xn_q0 0)))
 (let (($x523 (not $x522)))
 (let (($x128 (>= aw_1_1 0)))
 (let (($x127 (>= aw_1_0 0)))
 (let (($x129 (and $x127 $x128)))
 (let (($x526 (>= xn_q0 0)))
 (let (($x441 (and (>= xa_q 0) (<= xa_q 1) $x526)))
 (let (($x442 (and $x441 $x129 (>= block_num_q0 block_num_1) (ite $x523 $x512 (and (ite (not (<= pay_amount0_q (- w_1 1))) $x512 $x434))))))
 (or (not $x442) $x428)))))))))))))))))))))
 ))
 (let (($x446 (<= xa_q 1)))
 (let (($x513 (>= xa_q 0)))
 (let (($x447 (and $x513 $x446)))
 (and $x447 (> w_1 1) $x445))))))
 ))
 (and $x449)))
(check-sat)
